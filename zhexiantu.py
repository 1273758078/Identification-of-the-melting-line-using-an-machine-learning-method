import matplotlib.pyplot as plt

# 这两行代码解决 plt 中文显示的问题
plt.rcParams['font.sans-serif'] = ['SimHei']
plt.rcParams['axes.unicode_minus'] = False

# 输入纵坐标轴数据与横坐标轴数据
# gdp_rate = [9.4, 10.6, 9.6, 7.9, 7.8, 7.3, 6.9, 6.7, 6.8, 6.6]
# first_industry_rate = [4.0, 4.3, 4.2, 4.50, 3.8, 4.1, 3.9, 3.3, 4.0, 3.5]
# second_industry_rate = [10.3, 12.7, 10.7, 8.4, 8.0, 7.4, 6.2, 6.3, 5.9, 5.8]
# third_industry_rate = [9.6, 9.7, 9.5, 8.0, 8.3, 7.8, 8.2, 7.7, 7.9, 7.6]
# years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
# epochs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# accuracy = [0.5172619223594666, 0.6648809313774109, 0.7726190686225891, 0.7946428656578064, 0.776190459728241, 0.7892857193946838,
#             0.7803571224212646, 0.7940475940704346, 0.7976190447807312, 0.7928571701049805, 0.7773809432983398]
# dict1 = {300:27419.62,
# 310:28645.77,
# 320:29373.24,
# 330:30464.97,
# 340:31434.28,
# 350:32234.98,
# 360:33426.12,
# 370:34318.01,
# 380:35546.74,
# 390:36301,
# 400:37451.32
# }
cutting = []
accuracy = []
dict1 = {150:12171.71239,
160:13163.29306,
170:14316.96492,
180:15219.85566,
190:16194.48655,
200:17344.19508,
210:18167.67463,
220:19299.58296,
230:20362.91521,
240:21346.78235,
250:22737.66136
}

dict2 = {150:0.936159610748291,
160:0.9401496052742004,
170:0.9421446323394775,
180:0.9431421160697937,
190:0.9441396594047546,
200:0.949127197265625,
210:0.9571072459220886,
220:0.968578577041626,
230:0.9596009850502014,
240:0.9511221647262573,
250:0.9271820187568665
}

# dict = {2.36:92.48224290381927, 1.57:77.98702028820978, 1.18:66.10099538252295}
# list1 = [1.18, 1.57, 2.36]
list1 = [
210,
220,
230,
240,
250,
260,
270,
280,
290
]
list2 = [
0.952394009,
0.951573193,
0.955129981,
0.961422682,
0.96497947,
0.976744175,
0.986867309,
0.984404922,
0.970451415
]
# for i in range(150, 251, 10):
# for i in list1:
    # cutting.append(dict1[i])
    # cutting.append(i)
    # accuracy.append(dict2[i])

for i in range(9):
    cutting.append(list1[i])
    accuracy.append(list2[i])

# cutting = [330, 335, 340, 345, 350]
# accuracy = [0.9646219611167908, 0.9694721698760986, 0.9372325539588928, 0.968616247177124, 0.9614835977554321]
# accuracy = [0.9563480615615845, 0.9569187164306641, 0.964051365852356, 0.9651925563812256, 0.964051365852356]
# cutting = [0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700]
# accuracy = [0.9985734820365906, 0.923252522945404, 0.8870185613632202, 0.871612012386322, 0.8815976977348328, 0.8975749015808105,
#             0.9295292496681213, 0.9552068710327148, 0.9554921388626099, 0.9500713348388672, 0.9440798759460449, 0.9671897292137146,
#             0.9691869020462036, 0.9825962781906128, 1.0]
# accuracy = [0.9985734820365906, 0.9857346415519714, 0.9777460694313049, 0.9671897292137146, 0.9708986878395081, 0.968616247177124,
#             0.9654778838157654, 0.968616247177124, 0.9417974352836609, 0.8995720148086548, 0.8850213885307312, 0.8741797208786011,
#             0.8813124299049377, 0.9295292496681213, 1.0]
# accuracy = [0.9985734820365906, 0.9857346415519714, 0.9700428247451782, 0.9726105332374573, 0.9657632112503052, 0.9626248478889465,
#             0.9520684480667114, 0.9728958606719971, 0.9360913038253784, 0.9015691876411438, 0.8761768937110901, 0.8522111177444458,
#             0.8736091256141663, 0.9035663604736328, 1.0]
# accuracy = [0.9985734820365906, 0.9817403554916382, 0.9669044017791748, 0.9717546105384827, 0.9651925563812256, 0.9283879995346069,
#             0.9634807705879211, 0.9603423476219177, 0.9340941309928894, 0.8796005845069885, 0.8756062984466553, 0.8536376357078552,
#             0.8864479064941406, 0.916690468788147, 1.0]
# accuracy = [0.9985734820365906, 0.9817403554916382, 0.9731811881065369, 0.9697574973106384, 0.9574893116950989, 0.952924370765686,
#             0.964051365852356, 0.9614835977554321, 0.9389443397521973, 0.8912981748580933, 0.8687589168548584, 0.8547788858413696,
#             0.8724678754806519, 0.9181169867515564, 1.0]
# accuracy = [0.9985734820365906, 0.9825962781906128, 0.9746077060699463, 0.9657632112503052, 0.9603423476219177, 0.9597717523574829,
#             0.9649072885513306, 0.964051365852356, 0.9338088631629944, 0.8873038291931152, 0.8776034116744995, 0.8576319813728333,
#             0.8744650483131409, 0.9112696051597595, 1.0]

# accuracy = [0.9986628293991089, 0.9924225807189941, 0.9906396269798279, 0.9870737791061401, 0.9848451018333435, 0.9823935627937317,
#             0.9870737791061401, 0.9855136871337891, 0.9614441990852356, 0.9563182592391968, 0.9380432367324829, 0.9130822420120239,
#             0.9418319463729858, 0.9291285872459412, 1.0]

# accuracy = [0.9985734820365906, 0.9803138375282288, 0.9700428247451782, 0.9637660384178162, 0.9589158296585083, 0.9589158296585083,
#             0.9629101157188416, 0.9634807705879211, 0.9124108552932739, 0.885591983795166, 0.8553494811058044, 0.8350927233695984,
#             0.8610556125640869, 0.905563473701477, 1.0]#5x5切割方式训练结果(新)
# 4 个 plot 函数画出 4 条线，线形为折线，每条线对应各自的标签 label
# plt.plot(years, gdp_rate, '.-', label='GDP增长率')
# plt.plot(years, first_industry_rate, '.-', label='第一产业增长率')
# plt.plot(years, second_industry_rate, '.-', label='第二产业增长率')
# plt.plot(years, third_industry_rate, '.-', label='第三产业增长率')
# plt.plot(epochs, accuracy, '.-', label='准确率')
plt.plot(cutting, accuracy, '.-', label='准确率')
# plt.plot(cutting, accuracy, '.-', label='耦合参数')
# plt.xticks(years)  # 设置横坐标刻度为给定的年份
# plt.xlabel('年份') # 设置横坐标轴标题
# plt.legend() # 显示图例，即每条线对应 label 中的内容
# plt.show() # 显示图形
# plt.title('5x5切割方式训练结果（改2，800）局部', fontsize=20)
plt.title('Debye=200(10)局部', fontsize=20)
# plt.title('程序所得相变图')
plt.xticks(cutting)
plt.tick_params(labelsize=15)
# plt.xlabel('温度/K', fontsize=20)
plt.xlabel('切割位置', fontsize=20)
# plt.xlabel('κ')
# plt.ylabel('Γ')
plt.legend(fontsize=20)
plt.show()